{"version":3,"sources":["../server/main.js"],"names":["reportsService","genarateMonthlyUserHoursReport","res","genarateMonthAnalysisReport","_genarateMonthlyReport","shiftService","finishStartedShifts","_finishStartedShifts","express","require","bodyparser","path","mongoose","scheduler","logger","validator","storeService","userService","productService","encouragementService","messageService","deletionService","app","use","req","next","setHeader","set","port","json","listen","process","env","PORT","static","__dirname","db","locals","baseurl","localdb","remotedb","mongourl","_connectToDb","_setapApiEndpoints","monthlyReportJob","scheduleJob","finishShiftsJob","console","log","Promise","global","connect","connection","on","error","bind","once","setAdminUser","join","get","sendFile","post","login","body","status","send","username","password","result","sessionId","code","err","logout","retrievePassword","email","changePassword","oldPass","newPass","headers","getProfile","sessionid","user","startOrEndShift","startShift","shift","endShift","reportSaleOrOpened","reportSale","shiftId","sales","editSale","productId","saleTime","quantity","reportOpened","opens","addShiftComment","content","getActiveShiftEncouragements","params","encouragements","getSalesmanShifts","shifts","getSalesmanCurrentShift","query","date","Date","toISOString","getActiveShift","reportExpenses","km","parking","extraExpenses","getInbox","inbox","markAsRead","submitConstraints","constraints","addUser","userDetails","editUser","updateSalesReport","newSold","newOpened","deleteUser","getAllUsers","users","addOrEditOrDeleteStore","addStore","storeDetails","store","editStore","deleteStore","deleteStroe","storeId","getAllStores","stores","getStore","addOrEditProduct","addProduct","productDetails","product","editProduct","deleteProduct","getAllProducts","products","getProduct","addOrEditEncouragement","addEncouragement","encouragementDetails","encouragement","editEncouragement","deleteEncouragement","encouragementId","getAllEncouragements","getEncouragement","addShifts","shiftArr","generateShifts","automateGenerateShifts","startTime","endTime","publishShifts","deleteCreatedShifts","idsArr","getShiftsFromDate","fromDate","getAllShiftsByStatus","getSalesmanFinishedShifts","salesmanId","getStoreShiftsByStatus","getSalesmanLiveShift","editShift","shiftDetails","deleteShift","getShiftsOfRange","startDate","endDate","sendBroadcastMessage","sendBroadcast","managerEndShift","getSaleReportXl","shiftid","getSalaryForHumanResourceReport","year","month","getSalesmanListXL","getMonthlyHoursSalesmansReportXl","getMonthAnalysisReportXL","getMonthlyUserHoursReport","report","getMonthlyAnalysisReport","parseInt","updateMonthlyAnalysisReport","updateMonthlyHoursReport","updateMonthlySalesmanHoursReport","getOrderEventReportXL","super","cleanDb","ok","cleanUsers","cleanShifts","cleanProducts","cleanStores","cleanMessages","cleanEncs","cleanFInishedShifts","cleanMAReports","cleanSMHReports","initiateProducts"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\r\n\r\nlet express         = require('express');\r\nlet bodyparser      = require('body-parser');\r\nlet path            = require('path');\r\nlet mongoose        = require('mongoose');\r\nvar scheduler       = require('node-schedule');\r\n\r\nlet logger          = require('./src/Utils/Logger/logger');\r\nlet validator       = require('./src/Utils/Validators/index');\r\n\r\nlet storeService            = require('./src/Services/store/index');\r\nlet userService             = require('./src/Services/user/index');\r\nlet productService          = require('./src/Services/product/index');\r\nlet encouragementService    = require('./src/Services/encouragements/index');\r\nlet messageService          = require('./src/Services/messages/index');\r\nlet reportsService          = require('./src/Services/reports/index');\r\nlet shiftService            = require('./src/Services/shift/index');\r\nlet deletionService         = require('./src/Services/deletion/index');\r\n\r\nlet app = express();\r\n\r\napp.use(function (req, res, next) {\r\n\r\n    // Website you wish to allow to connect\r\n    res.setHeader('Access-Control-Allow-Origin', 'https://svjgiyksxg.localtunnel.me');\r\n\r\n    // Request methods you wish to allow\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n\r\n    // Request headers you wish to allow\r\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\r\n\r\n    // Set to true if you need the website to include cookies in the requests sent\r\n    // to the API (e.g. in case you use sessions)\r\n    res.setHeader('Access-Control-Allow-Credentials', true);\r\n\r\n    // Pass to next layer of middleware\r\n    next();\r\n});\r\n\r\napp.set('view engine', 'ejs');\r\nlet port = 3000;\r\napp.use(bodyparser.json());\r\napp.listen(process.env.PORT || port);\r\n\r\napp.use(express.static(__dirname + '/public'));\r\n\r\nlet db = 'IBBLS';\r\nif('DB' in process.env) {\r\n    db = process.env['DB'];\r\n}\r\napp.locals.baseurl = \"http://localhost:\" + port;\r\nlet localdb = 'mongodb://localhost/' + db;\r\nlet remotedb = \"mongodb://shahafstein:ibbls!234@ibbls-shard-00-00-9au6a.mongodb.net:27017,ibbls-shard-00-01-9au6a.mongodb.net:27017,ibbls-shard-00-02-9au6a.mongodb.net:27017/ibbls?ssl=true&replicaSet=ibbls-shard-0&authSource=admin\";\r\napp.locals.mongourl = localdb;\r\n\r\n\r\n_connectToDb();\r\n_setapApiEndpoints();\r\nlet monthlyReportJob  = scheduler.scheduleJob('* * 18 * *', _genarateMonthlyReport);\r\nlet finishShiftsJob = scheduler.scheduleJob('* 0 * * *', _finishStartedShifts);\r\n\r\nconsole.log('server is now running on port: ', {'port': port});\r\nfunction _connectToDb(){\r\n    mongoose.Promise = global.Promise;\r\n    mongoose.connect(app.locals.mongourl);\r\n    let db = mongoose.connection;\r\n    db.on('error', function(){\r\n        console.error.bind(console, 'connection error:');\r\n        console.log('cant connect to db');\r\n        //throw 'Cant connect to DB...';\r\n    });\r\n    db.once('open', function() {\r\n        console.log('connected to db successfuly');\r\n        userService.setAdminUser();\r\n    });\r\n}\r\n\r\nasync function _genarateMonthlyReport(){\r\n    let res = await reportsService.genarateMonthlyUserHoursReport();\r\n    res = await reportsService.genarateMonthAnalysisReport();\r\n}\r\nasync function _finishStartedShifts(){\r\n    let res = await shiftService.finishStartedShifts();\r\n}\r\n\r\nfunction _setapApiEndpoints() {\r\n    app.use('/scripts', express.static(path.join(__dirname, '/../scripts')));\r\n\r\n    app.get('/', function (req, res) {\r\n        res.sendFile(path.join(__dirname, '../index.html'));\r\n    });\r\n\r\n//User Services\r\n    app.post('/user/login', async function (req, res) {\r\n        if (!validator.login(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.login(req.body.username, req.body.password);\r\n        if(result.sessionId != null){\r\n            res.status(200).send(result);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/user/logout', async function (req, res) {\r\n        if (!validator.sessionId(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.logout(req.body.sessionId);\r\n        if(result.code == 200)\r\n            res.status(200).send('logout succeeded');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/user/retrievePassword', async function (req, res) {\r\n        if (!validator.retrievePassword(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.retrievePassword(req.body.username, req.body.email);\r\n        if(result.code == 200)\r\n            res.status(200).send('retrieved password successfully');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/user/changePassword', async function (req, res) {\r\n        if (!validator.changePassword(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.changePassword(req.body.sessionId, req.body.oldPass, req.body.newPass);\r\n        if(result.code == 200)\r\n            res.status(200).send('changed password succeeded');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/user/getProfile', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.getProfile(req.headers.sessionid);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.user);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n//Salesman Services\r\n    app.post('/salesman/startShift', async function (req, res) {\r\n        if(!validator.startOrEndShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.startShift(req.body.sessionId, req.body.shift);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/finishShift', async function (req, res) {\r\n        if(!validator.startOrEndShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.endShift(req.body.sessionId, req.body.shift);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportSale', async function (req, res) {\r\n        if(!validator.reportSaleOrOpened(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportSale(req.body.sessionId, req.body.shiftId, req.body.sales);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/editSale', async function (req, res) {\r\n        if(!validator.editSale(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.editSale(req.body.sessionId, req.body.shiftId, req.body.productId, req.body.saleTime, req.body.quantity);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportOpened', async function (req, res) {\r\n        if(!validator.reportSaleOrOpened(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportOpened(req.body.sessionId, req.body.shiftId, req.body.opens);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/addShiftComment', async function (req, res) {\r\n        /*if(!validator.addShiftComment(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }*/\r\n        let result = await shiftService.addShiftComment(req.body.sessionId, req.body.shiftId, req.body.content);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/:shiftId/activeShiftEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getActiveShiftEncouragements(req.body.sessionId, req.params.shiftId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.encouragements);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/encouragements', function (req, res) {\r\n        res.status(200).send('get encouragements list');\r\n    });\r\n\r\n    app.get('/salesman/getAllShifts', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanShifts(req.headers.sessionid);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/getCurrentShift', async function (req, res) {\r\n\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanCurrentShift(req.headers.sessionid, req.query.date);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/getCurrentShiftForRandomTests', async function (req, res) {\r\n\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanCurrentShift(req.headers.sessionid, new Date().toISOString());\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/getActiveShift', async function (req, res) {\r\n        if(!('sessionid' in req.headers) || (!('shiftId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getActiveShift(req.headers.sessionid, req.query.shiftId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportExpenses', async function(req, res){\r\n        if(!('sessionId' in req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportExpenses(req.body.sessionId, req.body.shiftId, req.body.km, req.body.parking, req.body.extraExpenses);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/addShiftsConstraints', function (req, res) {\r\n        res.status(200).send('add shifts constraints');\r\n    });\r\n\r\n    app.get('/salesman/salesHistory', function (req, res) {\r\n        res.status(200).send('get sales history');\r\n    });\r\n\r\n    app.get('/salesman/getBroadcastMessages', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let sessionId = req.headers.sessionid;\r\n        let result = await messageService.getInbox(sessionId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.inbox);\r\n        else {\r\n            res.status(result.code).send(result.err);\r\n            messageService.markAsRead(sessionId);\r\n        }\r\n    });\r\n\r\n    app.post('/salesman/submitConstraints', async function (req, res) {\r\n        if(!validator.submitConstraints(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result;\r\n        try {\r\n            result = await shiftService.submitConstraints(req.body.sessionId, req.body.constraints);\r\n        }\r\n        catch(err){\r\n            res.status(500).send(err);\r\n            return;\r\n        }\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n//Management Services\r\n    app.post('/management/addUser', async function (req, res) {\r\n        if (!validator.addUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.addUser(req.body.sessionId, req.body.userDetails);\r\n        if(result.code == 200){\r\n            res.status(200).send(result.user);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editUser', async function (req, res) {\r\n        if (!validator.editUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.editUser(req.body.sessionId, req.body.username, req.body.userDetails);\r\n        if(result.code == 200){\r\n            res.status(200).send();\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/updateSalesReport', async function(req, res){\r\n        let result = await shiftService.updateSalesReport(req.body.sessionId, req.body.shiftId,\r\n            req.body.productId, req.body.newSold, req.body.newOpened);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n\r\n    });\r\n\r\n    app.post('/management/deleteUser', async function (req, res) {\r\n        if (!validator.deleteUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.deleteUser(req.body.sessionId, req.body.username);\r\n        if(result.code == 200){\r\n            res.status(200).send();\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllUsers', async function(req, res){\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.getAllUsers(req.headers.sessionid);\r\n        if(result.code == 200){\r\n            res.status(200).send(result.users);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addStore', async function (req, res) {\r\n        if (!validator.addOrEditOrDeleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.addStore(req.body.sessionId, req.body.storeDetails);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editStore', async function (req, res) {\r\n        if (!validator.addOrEditOrDeleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.editStore(req.body.sessionId, req.body.storeDetails);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteStore', async function (req, res) {\r\n        if (!validator.deleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.deleteStroe(req.body.sessionId, req.body.storeId);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllStores', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.getAllStores(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.stores);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:storeId/getStore', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.getStore(req.headers.sessionid, req.params.storeId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addProduct', async function (req, res) {\r\n        if (!validator.addOrEditProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.addProduct(req.body.sessionId, req.body.productDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editProduct', async function (req, res) {\r\n        if (!validator.addOrEditProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.editProduct(req.body.sessionId, req.body.productDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteProduct', async function (req, res) {\r\n        if (!validator.deleteProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.deleteProduct(req.body.sessionId, req.body.productId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllProducts', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.getAllProducts(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.products);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:productId/getProduct', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.getProduct(req.headers.sessionid, req.params.productId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addEncouragement', async function (req, res) {\r\n        if (!validator.addOrEditEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.addEncouragement(req.body.sessionId, req.body.encouragementDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editEncouragement', async function (req, res) {\r\n        if (!validator.addOrEditEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.editEncouragement(req.body.sessionId ,req.body.encouragementDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteEncouragement', async function (req, res) {\r\n        if (!validator.deleteEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.deleteEncouragement(req.body.sessionId ,req.body.encouragementId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.getAllEncouragements(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragements);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:encouragementId/getAllEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.getEncouragement(req.headers.sessionid, req.params.encouragementId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addShifts', async function (req, res) {\r\n        if (!validator.addShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.addShifts(req.body.sessionId, req.body.shiftArr);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shiftArr);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/generateShifts', async function(req, res){\r\n        if (!validator.generateShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n\r\n        let result = await shiftService.automateGenerateShifts(req.body.sessionId, req.body.startTime, req.body.endTime);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shiftArr);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/publishShifts', async function (req, res) {\r\n        if (!validator.publishShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.publishShifts(req.body.sessionId, req.body.shiftArr);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n\r\n    app.post('/management/deleteCreatedShifts', async function(req, res) {\r\n        if(!('sessionId' in req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.deleteCreatedShifts(req.body.sessionId, req.body.idsArr);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getShiftsFromDate', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('fromDate' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getShiftsFromDate(req.headers.sessionid, req.query.fromDate);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shiftArr);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getShiftsByStatus', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('status' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getAllShiftsByStatus(req.headers.sessionid, req.query.status);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getSalesmanFinishedShifts', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('salesmanId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanFinishedShifts(req.headers.sessionid, req.query.salesmanId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getStoreShiftsByStatus', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('storeId' in req.query)) || (!('status' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getStoreShiftsByStatus(req.headers.sessionid, req.query.storeId, req.query.status);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getSalesmanLiveShift', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('salesmanId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanLiveShift(req.headers.sessionid, req.query.salesmanId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/editShifts', async function (req, res) {\r\n        if (!validator.editShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.editShift(req.body.sessionId, req.body.shiftDetails);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/deleteShift', async function (req, res) {\r\n        if (!validator.deleteShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.deleteShift(req.body.sessionId, req.body.shiftId);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n            return;\r\n        }\r\n    });\r\n\r\n    app.get('/management/getShiftsOfRange', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('startDate' in req.query)) || (!('endDate' in req.query))){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n\r\n        let result = await shiftService.getShiftsOfRange(req.headers.sessionid, req.query.startDate, req.query.endDate);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n//Manager Services\r\n    app.post('/manager/addNotificationRule', function (req, res) {\r\n        res.status(200).send('add new notification rule');\r\n    });\r\n\r\n    app.post('/manager/removeNotificationRule', function (req, res) {\r\n        res.status(200).send('remove notification rule');\r\n    });\r\n\r\n    app.post('/manager/setNotificationRule', function (req, res) {\r\n        res.status(200).send('set new notification rule');\r\n    });\r\n\r\n    app.post('/manager/sendBroadcastMessage', async function (req, res) {\r\n        if (!validator.sendBroadcastMessage(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await messageService.sendBroadcast(req.body.sessionId, req.body.content, req.body.date);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getShiftNotes', function (req, res) {\r\n        res.status(200).send('get shift notes');\r\n    });\r\n\r\n    app.post('/manager/editSalesReport', function (req, res) {\r\n        res.status(200).send('edit sales report');\r\n    });\r\n\r\n    app.get('/manager/getRecommendations', function (req, res) {\r\n        res.status(200).send('TODO - not yet implemented');\r\n    });\r\n\r\n    app.get('/manager/getShiftDetails', function (req, res) {\r\n        res.status(200).send('get a specific shift details');\r\n    });\r\n\r\n    app.post('/manager/finishShift', async function (req, res) {\r\n        if(!validator.managerEndShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.managerEndShift(req.body.sessionId, req.body.shiftId);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getShortages', function (req, res) {\r\n        res.status(200).send('get shortages');\r\n    });\r\n\r\n    app.post('/manager/publishShifts', function (req, res) {\r\n        res.status(200).send('publish shifts');\r\n    });\r\n\r\n    app.get('/manager/getSaleReportXl', async function (req, res) {\r\n        var result = await reportsService.getSaleReportXl(req.headers.sessionid, req.headers.shiftid);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/getSalaryForHumanResourceReport', async function (req, res) {\r\n        var result = await reportsService.getSalaryForHumanResourceReport(req.body.sessionId ,req.body.year,req.body.month);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getSalesmanListXL', async function (req, res) {\r\n        var result = await reportsService.getSalesmanListXL(req.headers.sessionid);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyHoursSalesmansReportXl', async function (req, res) {\r\n        var result = await reportsService.getMonthlyHoursSalesmansReportXl(req.headers.sessionId, req.headers.year, req.headers.month);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/getMonthAnalysisReportXL', async function (req, res) {\r\n        var result = await reportsService.getMonthAnalysisReportXL(req.body.sessionId, req.body.year);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyHoursSalesmansReport', async function (req, res) {\r\n        let result = await reportsService.getMonthlyUserHoursReport(req.headers.sessionid, req.query.year, req.query.month);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyAnalysisReport', async function (req, res) {\r\n        // if ((!('sessionid' in req.headers)) || (!validator.getMonthlyAnalysisReport(req.query))) {\r\n        //     res.status(404).send('invalid parameters');\r\n        //     return;\r\n        // }\r\n        let result = await reportsService.getMonthlyAnalysisReport(req.headers.sessionid, parseInt(req.query.year));\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/updateMonthlyAnalysisReport', async function(req, res) {\r\n        if(!validator.updateMonthlyAnalysisReport(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await reportsService.updateMonthlyAnalysisReport(req.body.sessionId, req.body.year, req.body.report);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/updateMonthlyHoursReport', async function(req, res){\r\n        if(!validator.updateMonthlyHoursReport(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await reportsService.updateMonthlySalesmanHoursReport(req.body.sessionId, req.body.year, req.body.month,\r\n            req.body.report);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/exportMonthlyHoursReport', async function(req, res){\r\n        // if(!validator.exportMonthlyHoursReport(req.body)){\r\n        //     res.status(404).send('invalid parameters');\r\n        //     return;\r\n        // }\r\n        let result = await reportsService.getMonthlyHoursSalesmansReportXl(req.body.sessionId, req.body.year, req.body.month);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/exportOrderEventsReport', async function(req, res){\r\n        // if(!validator.exportMonthlyHoursReport(req.body)){\r\n        //     res.status(404).send('invalid parameters');\r\n        //     return;\r\n        // }\r\n        let result = await reportsService.getOrderEventReportXL(req.body.sessionId, req.body.year, req.body.month);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/getEventsReportXl', async function(req, res){\r\n        let result = await reportsService.getOrderEventReportXL(req.body.sessionId, req.body.year, req.body.month);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    // -----------------------------Section for deletion API---------------------------------------------------\r\n    app.get('/super/cleanDb', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanDb();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"DB is successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete db\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanUsers', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanUsers();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"Users are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanShifts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanShifts();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"shifts are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanProducts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanProducts();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"products are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanStores', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanStores();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"stores are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanMessages', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanMessages();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"messages are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanEncs', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanEncs();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"encouragements are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanFinshedShifts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanFInishedShifts();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"shiftd are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanAnalyzeReports', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanMAReports();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"reports are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanMonthlyHoursReports', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanSMHReports();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"reports are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/initiateProducts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.initiateProducts();\r\n            if(result == true)\r\n                res.status(200).send(\"products are initiated in db\");\r\n            else\r\n                res.status(500).send(\"could not initiate products db\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    })\r\n\r\n\r\n}"]}