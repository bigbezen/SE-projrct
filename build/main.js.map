{"version":3,"sources":["../server/main.js"],"names":["reportsService","genarateMonthlyUserHoursReport","res","genarateMonthAnalysisReport","_genarateMonthlyReport","express","require","bodyparser","path","mongoose","scheduler","logger","validator","storeService","userService","productService","encouragementService","messageService","shiftService","deletionService","app","use","req","next","setHeader","set","port","json","listen","process","env","PORT","static","__dirname","db","locals","baseurl","localdb","remotedb","mongourl","_connectToDb","_setapApiEndpoints","monthlyJob","scheduleJob","console","log","Promise","global","connect","connection","on","error","bind","once","setAdminUser","join","get","sendFile","post","login","body","status","send","username","password","result","sessionId","code","err","logout","retrievePassword","email","changePassword","oldPass","newPass","headers","getProfile","sessionid","user","startOrEndShift","startShift","shift","endShift","reportSaleOrOpened","reportSale","shiftId","sales","editSale","productId","saleTime","quantity","reportOpened","opens","addShiftComment","content","getActiveShiftEncouragements","params","encouragements","getSalesmanShifts","shifts","getSalesmanCurrentShift","query","date","getActiveShift","reportExpenses","km","parking","getInbox","inbox","markAsRead","addUser","userDetails","editUser","updateSalesReport","newSold","newOpened","deleteUser","getAllUsers","users","addOrEditOrDeleteStore","addStore","storeDetails","store","editStore","deleteStore","deleteStroe","storeId","getAllStores","stores","getStore","addOrEditProduct","addProduct","productDetails","product","editProduct","deleteProduct","getAllProducts","products","getProduct","addOrEditEncouragement","addEncouragement","encouragementDetails","encouragement","editEncouragement","deleteEncouragement","encouragementId","getAllEncouragements","getEncouragement","addShifts","shiftArr","generateShifts","automateGenerateShifts","starttime","endTime","publishShifts","getShiftsFromDate","fromDate","getSalesmanFinishedShifts","salesmanId","getSalesmanLiveShift","editShift","shiftDetails","deleteShift","getShiftsOfRange","startDate","endDate","sendBroadcastMessage","sendBroadcast","getSaleReportXl","shiftid","getSalaryForHumanResourceReport","year","month","getSalesmanListXL","getMonthlyHoursSalesmansReportXl","getMonthAnalysisReportXL","getMonthlyUserHoursReport","report","getMonthlyAnalysisReport","parseInt","updateMonthlyAnalysisReport","updateMonthlyHoursReport","updateMonthlySalesmanHoursReport","super","cleanDb","ok","cleanUsers","cleanShifts","cleanProducts","cleanStores","cleanMessages","cleanEncs","cleanMAReports","cleanSMHReports","initiateProducts"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\r\n\r\nlet express         = require('express');\r\nlet bodyparser      = require('body-parser');\r\nlet path            = require('path');\r\nlet mongoose        = require('mongoose');\r\nvar scheduler       = require('node-schedule');\r\n\r\nlet logger          = require('./src/Utils/Logger/logger');\r\nlet validator       = require('./src/Utils/Validators/index');\r\n\r\nlet storeService            = require('./src/Services/store/index');\r\nlet userService             = require('./src/Services/user/index');\r\nlet productService          = require('./src/Services/product/index');\r\nlet encouragementService    = require('./src/Services/encouragements/index');\r\nlet messageService          = require('./src/Services/messages/index');\r\nlet reportsService          = require('./src/Services/reports/index');\r\nlet shiftService            = require('./src/Services/shift/index');\r\nlet deletionService         = require('./src/Services/deletion/index');\r\n\r\nlet app = express();\r\n\r\napp.use(function (req, res, next) {\r\n\r\n    // Website you wish to allow to connect\r\n    res.setHeader('Access-Control-Allow-Origin', 'https://svjgiyksxg.localtunnel.me');\r\n\r\n    // Request methods you wish to allow\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n\r\n    // Request headers you wish to allow\r\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\r\n\r\n    // Set to true if you need the website to include cookies in the requests sent\r\n    // to the API (e.g. in case you use sessions)\r\n    res.setHeader('Access-Control-Allow-Credentials', true);\r\n\r\n    // Pass to next layer of middleware\r\n    next();\r\n});\r\n\r\napp.set('view engine', 'ejs');\r\nlet port = 3000;\r\napp.use(bodyparser.json());\r\napp.listen(process.env.PORT || port);\r\n\r\napp.use(express.static(__dirname + '/public'));\r\n\r\nlet db = 'IBBLS';\r\nif('DB' in process.env) {\r\n    db = process.env['DB'];\r\n}\r\napp.locals.baseurl = \"http://localhost:\" + port;\r\nlet localdb = 'mongodb://localhost/' + db;\r\nlet remotedb = \"mongodb://shahafstein:ibbls!234@ibbls-shard-00-00-9au6a.mongodb.net:27017,ibbls-shard-00-01-9au6a.mongodb.net:27017,ibbls-shard-00-02-9au6a.mongodb.net:27017/ibbls?ssl=true&replicaSet=ibbls-shard-0&authSource=admin\";\r\napp.locals.mongourl = localdb;\r\n\r\n\r\n_connectToDb();\r\n_setapApiEndpoints();\r\nlet monthlyJob  = scheduler.scheduleJob('46 * * * *', _genarateMonthlyReport);\r\n\r\nconsole.log('server is now running on port: ', {'port': port});\r\nfunction _connectToDb(){\r\n    mongoose.Promise = global.Promise;\r\n    mongoose.connect(app.locals.mongourl);\r\n    let db = mongoose.connection;\r\n    db.on('error', function(){\r\n        console.error.bind(console, 'connection error:');\r\n        console.log('cant connect to db');\r\n        //throw 'Cant connect to DB...';\r\n    });\r\n    db.once('open', function() {\r\n        console.log('connected to db successfuly');\r\n        userService.setAdminUser();\r\n    });\r\n}\r\n\r\nasync function _genarateMonthlyReport(){\r\n    let res = await reportsService.genarateMonthlyUserHoursReport();\r\n    res = await reportsService.genarateMonthAnalysisReport();\r\n}\r\n\r\n\r\nfunction _setapApiEndpoints() {\r\n    app.use('/scripts', express.static(path.join(__dirname, '/../scripts')));\r\n\r\n    app.get('/', function (req, res) {\r\n        res.sendFile(path.join(__dirname, '../index.html'));\r\n    });\r\n\r\n//User Services\r\n    app.post('/user/login', async function (req, res) {\r\n        if (!validator.login(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.login(req.body.username, req.body.password);\r\n        if(result.sessionId != null){\r\n            res.status(200).send(result);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/user/logout', async function (req, res) {\r\n        if (!validator.sessionId(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.logout(req.body.sessionId);\r\n        if(result.code == 200)\r\n            res.status(200).send('logout succeeded');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/user/retrievePassword', async function (req, res) {\r\n        if (!validator.retrievePassword(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.retrievePassword(req.body.username, req.body.email);\r\n        if(result.code == 200)\r\n            res.status(200).send('retrieved password successfully');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/user/changePassword', async function (req, res) {\r\n        if (!validator.changePassword(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.changePassword(req.body.sessionId, req.body.oldPass, req.body.newPass);\r\n        if(result.code == 200)\r\n            res.status(200).send('changed password succeeded');\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/user/getProfile', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.getProfile(req.headers.sessionid);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.user);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n//Salesman Services\r\n    app.post('/salesman/startShift', async function (req, res) {\r\n        if(!validator.startOrEndShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.startShift(req.body.sessionId, req.body.shift);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/finishShift', async function (req, res) {\r\n        if(!validator.startOrEndShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.endShift(req.body.sessionId, req.body.shift);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportSale', async function (req, res) {\r\n        if(!validator.reportSaleOrOpened(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportSale(req.body.sessionId, req.body.shiftId, req.body.sales);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/editSale', async function (req, res) {\r\n        if(!validator.editSale(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.editSale(req.body.sessionId, req.body.shiftId, req.body.productId, req.body.saleTime, req.body.quantity);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportOpened', async function (req, res) {\r\n        if(!validator.reportSaleOrOpened(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportOpened(req.body.sessionId, req.body.shiftId, req.body.opens);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/addShiftComment', async function (req, res) {\r\n        /*if(!validator.addShiftComment(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }*/\r\n        let result = await shiftService.addShiftComment(req.body.sessionId, req.body.shiftId, req.body.content);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/:shiftId/activeShiftEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getActiveShiftEncouragements(req.body.sessionId, req.params.shiftId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.encouragements);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/encouragements', function (req, res) {\r\n        res.status(200).send('get encouragements list');\r\n    });\r\n\r\n    app.get('/salesman/getAllShifts', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanShifts(req.headers.sessionid);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/getCurrentShift', async function (req, res) {\r\n\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        console.log('bla');\r\n        let result = await shiftService.getSalesmanCurrentShift(req.headers.sessionid, req.query.date);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/salesman/getActiveShift', async function (req, res) {\r\n        if(!('sessionid' in req.headers) || (!('shiftId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getActiveShift(req.headers.sessionid, req.query.shiftId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/reportExpenses', async function(req, res){\r\n        if(!('sessionId' in req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.reportExpenses(req.body.sessionId, req.body.shiftId, req.body.km, req.body.parking);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/salesman/addShiftsConstraints', function (req, res) {\r\n        res.status(200).send('add shifts constraints');\r\n    });\r\n\r\n    app.get('/salesman/salesHistory', function (req, res) {\r\n        res.status(200).send('get sales history');\r\n    });\r\n\r\n    app.get('/salesman/getBroadcastMessages', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let sessionId = req.headers.sessionid;\r\n        let result = await messageService.getInbox(sessionId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.inbox);\r\n        else {\r\n            res.status(result.code).send(result.err);\r\n            messageService.markAsRead(sessionId);\r\n        }\r\n    });\r\n\r\n    app.post('/salesman/shiftRegister', function (req, res) {\r\n        res.status(200).send('registration to shift');\r\n    });\r\n\r\n//Management Services\r\n    app.post('/management/addUser', async function (req, res) {\r\n        if (!validator.addUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.addUser(req.body.sessionId, req.body.userDetails);\r\n        if(result.code == 200){\r\n            res.status(200).send(result.user);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editUser', async function (req, res) {\r\n        if (!validator.editUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.editUser(req.body.sessionId, req.body.username, req.body.userDetails);\r\n        if(result.code == 200){\r\n            res.status(200).send();\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/updateSalesReport', async function(req, res){\r\n        let result = await shiftService.updateSalesReport(req.body.sessionId, req.body.shiftId,\r\n            req.body.productId, req.body.newSold, req.body.newOpened);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n\r\n    });\r\n\r\n    app.post('/management/deleteUser', async function (req, res) {\r\n        if (!validator.deleteUser(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.deleteUser(req.body.sessionId, req.body.username);\r\n        if(result.code == 200){\r\n            res.status(200).send();\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllUsers', async function(req, res){\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await userService.getAllUsers(req.headers.sessionid);\r\n        if(result.code == 200){\r\n            res.status(200).send(result.users);\r\n        }\r\n        else{\r\n            res.status(result.code).send(result.err);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addStore', async function (req, res) {\r\n        if (!validator.addOrEditOrDeleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.addStore(req.body.sessionId, req.body.storeDetails);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editStore', async function (req, res) {\r\n        if (!validator.addOrEditOrDeleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.editStore(req.body.sessionId, req.body.storeDetails);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteStore', async function (req, res) {\r\n        if (!validator.deleteStore(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.deleteStroe(req.body.sessionId, req.body.storeId);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllStores', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.getAllStores(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.stores);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:storeId/getStore', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await storeService.getStore(req.headers.sessionid, req.params.storeId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.store);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addProduct', async function (req, res) {\r\n        if (!validator.addOrEditProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.addProduct(req.body.sessionId, req.body.productDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editProduct', async function (req, res) {\r\n        if (!validator.addOrEditProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.editProduct(req.body.sessionId, req.body.productDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteProduct', async function (req, res) {\r\n        if (!validator.deleteProduct(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.deleteProduct(req.body.sessionId, req.body.productId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllProducts', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.getAllProducts(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.products);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:productId/getProduct', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await productService.getProduct(req.headers.sessionid, req.params.productId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.product);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addEncouragement', async function (req, res) {\r\n        if (!validator.addOrEditEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.addEncouragement(req.body.sessionId, req.body.encouragementDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/editEncouragement', async function (req, res) {\r\n        if (!validator.addOrEditEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.editEncouragement(req.body.sessionId ,req.body.encouragementDetails);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/deleteEncouragement', async function (req, res) {\r\n        if (!validator.deleteEncouragement(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.deleteEncouragement(req.body.sessionId ,req.body.encouragementId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.get('/management/getAllEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.getAllEncouragements(req.headers.sessionid);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragements);\r\n        }\r\n    });\r\n\r\n    app.get('/management/:encouragementId/getAllEncouragements', async function (req, res) {\r\n        if(!('sessionid' in req.headers)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await encouragementService.getEncouragement(req.headers.sessionid, req.params.encouragementId);\r\n        if (result.err != null) {\r\n            res.status(result.code).send(result.err);\r\n        }\r\n        else {\r\n            res.status(result.code).send(result.encouragement);\r\n        }\r\n    });\r\n\r\n    app.post('/management/addShifts', async function (req, res) {\r\n        if (!validator.addShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.addShifts(req.body.sessionId, req.body.shiftArr);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shiftArr);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/generateShifts', async function(req, res){\r\n        if (!validator.generateShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.automateGenerateShifts(req.body.sessionId, req.body.starttime, req.body.endTime);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/publishShifts', async function (req, res) {\r\n        if (!validator.publishShifts(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.publishShifts(req.body.sessionId, req.body.shiftArr);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getShiftsFromDate', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('fromDate' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getShiftsFromDate(req.headers.sessionid, req.query.fromDate);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shiftArr);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getSalesmanFinishedShifts', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('salesmanId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanFinishedShifts(req.headers.sessionid, req.query.salesmanId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/management/getSalesmanLiveShift', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('salesmanId' in req.query))) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.getSalesmanLiveShift(req.headers.sessionid, req.query.salesmanId);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shift);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/editShifts', async function (req, res) {\r\n        if (!validator.editShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.editShift(req.body.sessionId, req.body.shiftDetails);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/management/deleteShift', async function (req, res) {\r\n        if (!validator.deleteShift(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await shiftService.deleteShift(req.body.sessionId, req.body.shiftId);\r\n        if (result.err != null)\r\n        {\r\n            res.status(result.code).send(result.err);\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            res.status(result.code).send(result.store);\r\n            return;\r\n        }\r\n    });\r\n\r\n    app.get('/management/getShiftsOfRange', async function(req, res){\r\n        if(!('sessionid' in req.headers) || (!('startDate' in req.query)) || (!('endDate' in req.query))){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n\r\n        let result = await shiftService.getShiftsOfRange(req.headers.sessionid, req.query.startDate, req.query.endDate);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.shifts);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n//Manager Services\r\n    app.post('/manager/addNotificationRule', function (req, res) {\r\n        res.status(200).send('add new notification rule');\r\n    });\r\n\r\n    app.post('/manager/removeNotificationRule', function (req, res) {\r\n        res.status(200).send('remove notification rule');\r\n    });\r\n\r\n    app.post('/manager/setNotificationRule', function (req, res) {\r\n        res.status(200).send('set new notification rule');\r\n    });\r\n\r\n    app.post('/manager/sendBroadcastMessage', async function (req, res) {\r\n        if (!validator.sendBroadcastMessage(req.body)) {\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await messageService.sendBroadcast(req.body.sessionId, req.body.content, req.body.date);\r\n        if(result.code == 200)\r\n            res.status(200).send();\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getShiftNotes', function (req, res) {\r\n        res.status(200).send('get shift notes');\r\n    });\r\n\r\n    app.post('/manager/editSalesReport', function (req, res) {\r\n        res.status(200).send('edit sales report');\r\n    });\r\n\r\n    app.get('/manager/getRecommendations', function (req, res) {\r\n        res.status(200).send('TODO - not yet implemented');\r\n    });\r\n\r\n    app.get('/manager/getShiftDetails', function (req, res) {\r\n        res.status(200).send('get a specific shift details');\r\n    });\r\n\r\n    app.get('/manager/getShortages', function (req, res) {\r\n        res.status(200).send('get shortages');\r\n    });\r\n\r\n    app.post('/manager/publishShifts', function (req, res) {\r\n        res.status(200).send('publish shifts');\r\n    });\r\n\r\n    app.get('/manager/getSaleReportXl', async function (req, res) {\r\n        var result = await reportsService.getSaleReportXl(req.headers.sessionid, req.headers.shiftid);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/getSalaryForHumanResourceReport', async function (req, res) {\r\n        var result = await reportsService.getSalaryForHumanResourceReport(req.body.sessionId ,req.body.year,req.body.month);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getSalesmanListXL', async function (req, res) {\r\n        var result = await reportsService.getSalesmanListXL(req.headers.sessionid);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyHoursSalesmansReportXl', async function (req, res) {\r\n        var result = await reportsService.getMonthlyHoursSalesmansReportXl(req.headers.sessionId, req.headers.year, req.headers.month);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/getMonthAnalysisReportXL', async function (req, res) {\r\n        var result = await reportsService.getMonthAnalysisReportXL(req.body.sessionId, req.body.year);\r\n        res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyHoursSalesmansReport', async function (req, res) {\r\n        let result = await reportsService.getMonthlyUserHoursReport(req.headers.sessionid, req.query.year, req.query.month);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.get('/manager/getMonthlyAnalysisReport', async function (req, res) {\r\n        // if ((!('sessionid' in req.headers)) || (!validator.getMonthlyAnalysisReport(req.query))) {\r\n        //     res.status(404).send('invalid parameters');\r\n        //     return;\r\n        // }\r\n        let result = await reportsService.getMonthlyAnalysisReport(req.headers.sessionid, parseInt(req.query.year));\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/updateMonthlyAnalysisReport', async function(req, res) {\r\n        if(!validator.updateMonthlyAnalysisReport(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await reportsService.updateMonthlyAnalysisReport(req.body.sessionId, req.body.year, req.body.report);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/updateMonthlyHoursReport', async function(req, res){\r\n        if(!validator.updateMonthlyHoursReport(req.body)){\r\n            res.status(404).send('invalid parameters');\r\n            return;\r\n        }\r\n        let result = await reportsService.updateMonthlySalesmanHoursReport(req.body.sessionId, req.body.year, req.body.month,\r\n            req.body.report);\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    app.post('/manager/exportMonthlyHoursReport', async function(req, res){\r\n        // if(!validator.exportMonthlyHoursReport(req.body)){\r\n        //     res.status(404).send('invalid parameters');\r\n        //     return;\r\n        // }\r\n        let result = await reportsService.getMonthlyHoursSalesmansReportXl(req.body.sessionId, req.body.year, req.body.month);\r\n        console.log('bla');\r\n        if(result.code == 200)\r\n            res.status(200).send(result.report);\r\n        else\r\n            res.status(result.code).send(result.err);\r\n    });\r\n\r\n    // -----------------------------Section for deletion API---------------------------------------------------\r\n    app.get('/super/cleanDb', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanDb();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"DB is successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete db\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanUsers', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanUsers();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"Users are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanShifts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanShifts();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"shifts are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanProducts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanProducts();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"products are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanStores', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanStores();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"stores are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanMessages', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanMessages();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"messages are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete \");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanEncs', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanEncs();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"encouragements are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanAnalyzeReports', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanMAReports();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"reports are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/cleanMonthlyHoursReports', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.cleanSMHReports();\r\n            if(result.result.ok == 1)\r\n                res.status(200).send(\"reports are successfully deleted\");\r\n            else\r\n                res.status(500).send(\"could not delete\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    });\r\n\r\n    app.get('/super/initiateProducts', async function(req, res){\r\n        if(req.query.super == \"ibblsservice\"){\r\n            let result = await deletionService.initiateProducts();\r\n            if(result == true)\r\n                res.status(200).send(\"products are initiated in db\");\r\n            else\r\n                res.status(500).send(\"could not initiate products db\");\r\n        }\r\n        else\r\n            res.status(404).send(\"unauthorized\");\r\n    })\r\n\r\n\r\n}"]}